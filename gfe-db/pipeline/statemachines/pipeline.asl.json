{
    "StartAt": "Build Stage",
    "States": {
        "Build Stage": {
            "Type": "Map",
            "Next": "GfeDbLoad",
            "MaxConcurrency": 0,
            "Iterator": {
                "StartAt": "UpdateExecutionStateInProgress",
                "States": {
                    "UpdateExecutionStateInProgress": {
                        "Type": "Task",
                        "Resource": "arn:aws:states:::dynamodb:updateItem",
                        "Next": "GfeDbBuildJob",
                        "Parameters": {
                            "TableName": "${ExecutionStateTable}",
                            "Key": {
                                "commit__sha": {
                                    "S.$": "$.commit_sha"
                                },
                                "execution__version": {
                                    "N.$": "States.Format('{}', $.version)"
                                }
                            },
                            "UpdateExpression": "SET execution__status = :status, execution__input_parameters__align = :align, execution__input_parameters__kir = :kir, execution__input_parameters__mem_profile = :mem_profile, execution__input_parameters__limit = :limit",
                            "ExpressionAttributeValues": {
                                ":status": {
                                    "S": "IN_PROGRESS"
                                },
                                ":align": {
                                    "S.$": "States.Format('{}', $.input_parameters.align)"
                                },
                                ":kir": {
                                    "S.$": "States.Format('{}', $.input_parameters.kir)"
                                },
                                ":mem_profile": {
                                    "S.$": "States.Format('{}', $.input_parameters.mem_profile)"
                                },
                                ":limit": {
                                    "N.$": "States.Format('{}', $.input_parameters.limit)"
                                }
                            }
                        }
                    },
                    "GfeDbBuildJob": {
                        "Type": "Task",
                        "Resource": "arn:aws:states:::batch:submitJob.sync",
                        "ResultPath": null,
                        "Next": "BuildSuccess",
                        "Catch": [
                            {
                                "ErrorEquals": [
                                    "States.ALL"
                                ],
                                "Next": "BuildError"
                            }
                        ],
                        "Parameters": {
                            "JobDefinition": "${BuildJobDefinition}",
                            "JobName": "${BuildJobName}",
                            "JobQueue": "${BuildJobQueue}",
                            "ContainerOverrides": {
                                "Environment": [
                                    {
                                        "Name": "RELEASES",
                                        "Value.$": "$.version"
                                    },
                                    {
                                        "Name": "ALIGN",
                                        "Value.$": "$.align"
                                    },
                                    {
                                        "Name": "KIR",
                                        "Value.$": "$.kir"
                                    },
                                    {
                                        "Name": "MEM_PROFILE",
                                        "Value.$": "$.mem_profile"
                                    },
                                    {
                                        "Name": "LIMIT",
                                        "Value.$": "$.limit"
                                    }
                                ]
                            }
                        }
                    },
                    "BuildError": {
                        "Type": "Pass",
                        "End": true
                    },
                    "BuildSuccess": {
                        "Type": "Pass",
                        "End": true
                    }
                }
            }
        },
        "GfeDbLoad": {
            "Type": "Map",
            "End": true,
            "MaxConcurrency": 1,
            "Iterator": {
                "StartAt": "LoadGraph",
                "States": {
                    "LoadGraph": {
                        "Type": "Parallel",
                        "Next": "Load Success",
                        "Catch": [
                            {
                                "ErrorEquals": [
                                    "States.ALL"
                                ],
                                "Next": "LoadError"
                            }
                        ],
                        "Branches": [
                            {
                                "StartAt": "InvokeLoadScript",
                                "States": {
                                    "InvokeLoadScript": {
                                        "Type": "Task",
                                        "Resource": "${InvokeLoadScriptFunctionArn}",
                                        "End": true
                                    }
                                }
                            },
                            {
                                "StartAt": "LoadData",
                                "States": {
                                    "LoadData": {
                                        "Type": "Task",
                                        "Resource": "${LoadNeo4jActivityArn}",
                                        "HeartbeatSeconds": 60,
                                        "End": true
                                    }
                                }
                            }
                        ]
                    },
                    "LoadError": {
                        "Type": "Pass",
                        "End": true
                    },
                    "Load Success": {
                        "Type": "Pass",
                        "End": true
                    }
                }
            }
        }
    }
}