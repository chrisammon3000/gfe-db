{
    "StartAt": "BuildRelease",
    "States": {
        "BuildRelease": {
            "Type": "Parallel",
            "Next": "LoadRelease",
            "OutputPath": "$.[1]",
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "Next": "ReportFailure"
                }
            ],
            "Branches": [
                {
                    "StartAt": "UpdateExecutionStateInProgress",
                    "States": {
                        "UpdateExecutionStateInProgress": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::dynamodb:updateItem",
                            "ResultPath": null,
                            "End": true,
                            "Parameters": {
                                "TableName": "${ExecutionStateTable}",
                                "Key": {
                                    "commit__sha": {
                                        "S.$": "$.commit_sha"
                                    },
                                    "execution__version": {
                                        "N.$": "States.Format('{}', $.version)"
                                    }
                                },
                                "UpdateExpression": "SET execution__date_utc = :execution_date_utc, execution__status = :status, execution__input_parameters__align = :align, execution__input_parameters__kir = :kir, execution__input_parameters__mem_profile = :mem_profile, execution__input_parameters__limit = :limit, updated_utc = :updated_utc",
                                "ExpressionAttributeValues": {
                                    ":execution_date_utc": {
                                        "S.$": "$$.Execution.StartTime"
                                    },
                                    ":status": {
                                        "S": "IN_PROGRESS"
                                    },
                                    ":align": {
                                        "BOOL.$": "$.input_parameters.align"
                                    },
                                    ":kir": {
                                        "BOOL.$": "$.input_parameters.kir"
                                    },
                                    ":mem_profile": {
                                        "BOOL.$": "$.input_parameters.mem_profile"
                                    },
                                    ":limit": {
                                        "N.$": "States.Format('{}', $.input_parameters.limit)"
                                    },
                                    ":updated_utc": {
                                        "S.$": "$$.State.EnteredTime"
                                    }
                                }
                            }
                        }
                    }
                },
                {
                    "StartAt": "GfeDbBuildJobMockState",
                    "States": {
                        "GfeDbBuildJobMockState": {
                            "Type": "Task",
                            "Resource": "arn:aws:lambda:us-east-1:531868584498:function:GfeDbBuildJobMockFunction",
                            "ResultPath": null,
                            "Next": "ListFiles"
                        },
                        "ListFiles": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::aws-sdk:s3:listObjects",
                            "Parameters": {
                              "Bucket": "${DataBucketName}",
                              "Prefix.$": "States.Format('data/{}/csv/', $.version)"
                            },
                            "ResultSelector": {
                              "files.$": "$.Contents[*].Key",
                              "num_files.$": "States.ArrayLength($.Contents)"
                            },
                            "ResultPath": "$",
                            "Next": "FilesExist"
                          },
                          "FilesExist": {
                            "Type": "Choice",
                            "Choices": [
                              {
                                "Variable": "$.files",
                                "IsNull": true,
                                "Next": "FilesNotFound"
                              },
                              {
                                "Variable": "$.num_files",
                                "NumericEquals": 0,
                                "Next": "FilesNotFound"
                              },
                              {
                                "Variable": "$.num_files",
                                "NumericGreaterThan": 0,
                                "Next": "FilesFound"
                              }
                            ],
                            "Default": "FilesNotFound"
                          },
                          "FilesNotFound": {
                            "Type": "Fail",
                            "Error": "NoFilesFoundError",
                            "Cause": "No files found in the specified S3 location."
                          },
                          "FilesFound": {
                            "Type": "Pass",
                            "OutputPath": "$$.Execution.Input",
                            "End": true
                          }
                    }
                }
            ]
        },
        "LoadRelease": {
            "Type": "Parallel",
            "OutputPath": "$.[1]",
            "Next": "ReportSuccess",
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "Next": "ReportFailure"
                }
            ],
            "Branches": [
                {
                    "StartAt": "InvokeLoadScript",
                    "States": {
                        "InvokeLoadScript": {
                            "Type": "Task",
                            "Resource": "${InvokeLoadScriptFunctionArn}",
                            "End": true
                        }
                    }
                },
                {
                    "StartAt": "LoadReleaseActivity",
                    "States": {
                        "LoadReleaseActivity": {
                            "Type": "Task",
                            "Resource": "${LoadReleaseActivityArn}",
                            "HeartbeatSeconds": 60,
                            "End": true
                        }
                    }
                }
            ]
        },
        "ReportFailure": {
            "Type": "Parallel",
            "Next": "PipelineFailure",
            "InputPath": "$$.Execution.Input",
            "Branches": [
                {
                    "StartAt": "UpdateExecutionStateFailure",
                    "States": {
                        "UpdateExecutionStateFailure": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::dynamodb:updateItem",
                            "ResultPath": null,
                            "End": true,
                            "Parameters": {
                                "TableName": "${ExecutionStateTable}",
                                "Key": {
                                    "commit__sha": {
                                        "S.$": "$.commit_sha"
                                    },
                                    "execution__version": {
                                        "N.$": "States.Format('{}', $.version)"
                                    }
                                },
                                "UpdateExpression": "SET execution__status = :status, updated_utc = :updated_utc",
                                "ExpressionAttributeValues": {
                                    ":status": {
                                        "S": "FAILED"
                                    },
                                    ":updated_utc": {
                                        "S.$": "$$.State.EnteredTime"
                                    }
                                }
                            }
                        }
                    }
                },
                {
                    "StartAt": "PublishFailure",
                    "States": {
                        "PublishFailure": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::sns:publish",
                            "Parameters": {
                                "TopicArn": "${GfeDbExecutionResultTopicArn}",
                                "Message": {
                                    "result": "FAILED",
                                    "input_parameters.$": "$"
                                }
                            },
                            "End": true
                        }
                    }
                }
            ]
        },
        "PipelineFailure": {
            "Type": "Fail"
        },
        "ReportSuccess": {
            "Type": "Parallel",
            "Next": "PipelineSuccess",
            "InputPath": "$$.Execution.Input",
            "Branches": [
                {
                    "StartAt": "UpdateExecutionStateSuccess",
                    "States": {
                        "UpdateExecutionStateSuccess": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::dynamodb:updateItem",
                            "ResultPath": null,
                            "End": true,
                            "Parameters": {
                                "TableName": "${ExecutionStateTable}",
                                "Key": {
                                    "commit__sha": {
                                        "S.$": "$.commit_sha"
                                    },
                                    "execution__version": {
                                        "N.$": "States.Format('{}', $.version)"
                                    }
                                },
                                "UpdateExpression": "SET execution__status = :status, updated_utc = :updated_utc",
                                "ExpressionAttributeValues": {
                                    ":status": {
                                        "S": "SUCCESS"
                                    },
                                    ":updated_utc": {
                                        "S.$": "$$.State.EnteredTime"
                                    }
                                }
                            }
                        }
                    }
                },
                {
                    "StartAt": "PublishSuccess",
                    "States": {
                        "PublishSuccess": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::sns:publish",
                            "Parameters": {
                                "TopicArn": "${GfeDbExecutionResultTopicArn}",
                                "Message": {
                                    "result": "SUCCESS",
                                    "input_parameters.$": "$"
                                }
                            },
                            "End": true
                        }
                    }
                }
            ]
        },
        "PipelineSuccess": {
            "Type": "Succeed"
        }
    }
}