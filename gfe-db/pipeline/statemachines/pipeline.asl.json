{
    "StartAt": "Pre-Execution Validation Query",
    "States": {
        "Pre-Execution Validation Query": {
            "Type": "Task",
            "Resource": "${ExecuteValidationQueriesFunctionArn}",
            "ResultPath": "$.validations.queries",
            "Next": "Pre-Execution Backup"
        },
        "Pre-Execution Backup": {
            "Type": "Task",
            "Resource": "${InvokeBackupScriptFunctionArn}",
            "ResultPath": "$.backups",
            "Next": "Build Stage"
        },
        "Build Stage": {
            "Type": "Map",
            "Next": "Validate Build",
            "MaxConcurrency": 0,
            "ItemsPath": "$.input",
            "ResultPath": null,
            "Iterator": {
                "StartAt": "Generate CSV files",
                "States": {
                    "Generate CSV files": {
                        "Type": "Task",
                        "Resource": "arn:aws:states:::batch:submitJob.sync",
                        "ResultPath": null,
                        "End": true,
                        "Catch": [
                            {
                                "ErrorEquals": [
                                    "States.ALL"
                                ],
                                "Next": "Fail Build"
                            }
                        ],
                        "Parameters": {
                            "JobDefinition": "${BuildJobDefinition}",
                            "JobName": "${BuildJobName}",
                            "JobQueue": "${BuildJobQueue}",
                            "ContainerOverrides": {
                                "Environment": [
                                    {
                                        "Name": "RELEASES",
                                        "Value.$": "$.RELEASES"
                                    },
                                    {
                                        "Name": "ALIGN",
                                        "Value.$": "$.ALIGN"
                                    },
                                    {
                                        "Name": "KIR",
                                        "Value.$": "$.KIR"
                                    },
                                    {
                                        "Name": "MEM_PROFILE",
                                        "Value.$": "$.MEM_PROFILE"
                                    },
                                    {
                                        "Name": "LIMIT",
                                        "Value.$": "$.LIMIT"
                                    }
                                ]
                            }
                        }
                    },
                    "Fail Build": {
                        "Type": "Pass",
                        "ResultPath": null,
                        "End": true
                    }
                }
            }
        },
        "Validate Build": {
            "Type": "Task",
            "Resource": "${ValidateBuildOutputFunctionArn}",
            "Parameters": {
                "execution_context.$": "$$"
            },
            "ResultPath": "$.validations.build",
            "Next": "Evaluate Payloads"
        },
        "Evaluate Payloads": {
            "Type": "Choice",
            "Choices": [
                {
                    "Variable": "$.validations.build.has_valid_payload",
                    "BooleanEquals": true,
                    "Next": "Load Stage"
                }
            ],
            "Default": "Execution Failed"
        },
        "Execution Failed": {
            "Type": "Fail",
            "Error": "ExecutionFailed",
            "Cause": "No valid payloads were generated"
        },
        "Load Stage": {
            "Type": "Map",
            "Next": "Post-Execution Validation Query",
            "MaxConcurrency": 1,
            "ItemsPath": "$.validations.build.validated",
            "ResultPath": null,
            "Iterator": {
                "StartAt": "Load Data",
                "States": {
                    "Load Data": {
                        "Type": "Parallel",
                        "ResultPath": null,
                        "End": true,
                        "Branches": [
                            {
                                "StartAt": "Invoke Load Script",
                                "States": {
                                    "Invoke Load Script": {
                                        "Type": "Task",
                                        "Resource": "${InvokeLoadScriptFunctionArn}",
                                        "ResultPath": null,
                                        "End": true
                                    }
                                }
                            },
                            {
                                "StartAt": "Load GFEs",
                                "States": {
                                    "Load GFEs": {
                                        "Type": "Task",
                                        "Resource": "${LoadNeo4jActivityArn}",
                                        "HeartbeatSeconds": 60,
                                        "ResultPath": null,
                                        "End": true,
                                        "Catch": [
                                            {
                                                "ErrorEquals": [
                                                    "States.ALL"
                                                ],
                                                "Next": "Fail Load"
                                            }
                                        ]
                                    },
                                    "Fail Load": {
                                        "Type": "Pass",
                                        "ResultPath": null,
                                        "End": true
                                    }
                                }
                            }
                        ]
                    }
                }
            }
        },
        "Post-Execution Validation Query": {
            "Type": "Pass",
            "ResultPath": null,
            "Next": "Post-Execution Backup"
        },
        "Post-Execution Backup": {
            "Type": "Pass",
            "ResultPath": null,
            "End": true
        }
    }
}