{
    "StartAt": "Run Pre-Execution Validation Query",
    "States": {
        "Run Pre-Execution Validation Query": {
            "Type": "Task",
            "Resource": "${ExecuteValidationQueriesFunctionArn}",
            "ResultPath": "$.validations.queries.pre",
            "Next": "Run Pre-Execution Backup",
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "Next": "Execution Failed"
                }
            ]
        },
        "Run Pre-Execution Backup": {
            "Type": "Task",
            "Resource": "${InvokeBackupScriptFunctionArn}",
            "ResultPath": "$.backups.pre",
            "Next": "Get Execution State",
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "Next": "Execution Failed"
                }
            ]
        },
        "Get Execution State": {
            "Type": "Task",
            "Resource": "${GetExecutionStateFunctionArn}",
            "ResultPath": "$.state",
            "Next": "Build Stage",
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "Next": "Execution Failed"
                }
            ]
        },
        "Build Stage": {
            "Type": "Parallel",
            "ResultPath": null,
            "Next": "Load Stage",
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "Next": "Execution Failed"
                }
            ],
            "Branches": [
                {
                    "StartAt": "Build IMGT Release",
                    "States": {
                        "Build IMGT Release": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::batch:submitJob.sync",
                            "ResultPath": null,
                            "Next": "Validate Build",
                            "Parameters": {
                                "JobDefinition": "${BuildJobDefinition}",
                                "JobName": "${BuildJobName}",
                                "JobQueue": "${BuildJobQueue}",
                                "ContainerOverrides": {
                                    "Environment": [
                                        {
                                            "Name": "EVENT",
                                            "Value.$": "States.JsonToString($)"
                                        }
                                    ]
                                }
                            }
                        },
                        "Validate Build": {
                            "Type": "Task",
                            "Resource": "${ValidateBuildOutputFunctionArn}",
                            "Parameters": {
                                "execution_context.$": "$$"
                            },
                            "ResultPath": "$.validations.build",
                            "Next": "Is Build Valid?"
                        },
                        "Is Build Valid?": {
                            "Type": "Choice",
                            "Choices": [
                                {
                                    "Variable": "$.validations.build.has_valid_payload",
                                    "BooleanEquals": true,
                                    "Next": "Build Succeeded"
                                }
                            ],
                            "Default": "Build Failed"
                        },
                        "Build Succeeded": {
                            "Type": "Pass",
                            "ResultPath": null,
                            "End": true
                        },
                        "Build Failed": {
                            "Type": "Fail",
                            "Error": "BuildFailed",
                            "Cause": "No valid build was generated"
                        }
                    }
                }
            ]
        },
        "Execution Failed": {
            "Type": "Fail",
            "Error": "ExecutionFailed"
        },
        "Load Stage": {
            "Type": "Parallel",
            "OutputPath": "$.[1]",
            "Next": "Run Post-Execution Backup",
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "Next": "Execution Failed"
                }
            ],
            "Branches": [
                {
                    "StartAt": "Run Load Script",
                    "States": {
                        "Run Load Script": {
                            "Type": "Task",
                            "Resource": "${InvokeLoadScriptFunctionArn}",
                            "End": true
                        }
                    }
                },
                {
                    "StartAt": "Load Release Activity",
                    "States": {
                        "Load Release Activity": {
                            "Type": "Task",
                            "Resource": "${LoadReleaseActivityArn}",
                            "HeartbeatSeconds": 60,
                            "ResultPath": null,
                            "Next": "Run Post-Execution Validation Query"
                        },
                        "Run Post-Execution Validation Query": {
                            "Type": "Task",
                            "Resource": "${ExecuteValidationQueriesFunctionArn}",
                            "ResultPath": "$.validations.queries.post",
                            "Next": "Validate Results (placeholder)"
                        },
                        "Validate Results (placeholder)": {
                            "Type": "Pass",
                            "ResultPath": null,
                            "Next": "Is Load Successful? (placeholder)"
                        },
                        "Is Load Successful? (placeholder)": {
                            "Type": "Choice",
                            "Choices": [
                                {
                                    "Variable": "$.validations.queries.post",
                                    "IsPresent": true,
                                    "Next": "Load Succeeded"
                                }
                            ],
                            "Default": "Load Failed"
                        },
                        "Load Succeeded": {
                            "Type": "Pass",
                            "ResultPath": null,
                            "End": true
                        },
                        "Load Failed": {
                            "Type": "Fail",
                            "Error": "LoadFailed",
                            "Cause": "Post-execution validation queries do not match expected values"
                        }
                    }
                }
            ]
        },
        "Run Post-Execution Backup": {
            "Type": "Task",
            "Resource": "${InvokeBackupScriptFunctionArn}",
            "ResultPath": "$.backups.post",
            "End": true,
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "Next": "Execution Failed"
                }
            ]
        }
    }
}