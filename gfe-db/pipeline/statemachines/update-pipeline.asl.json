{
    "StartAt": "Run Pre-Execution Validation Query",
    "States": {
        "Run Pre-Execution Validation Query": {
            "Type": "Task",
            "Resource": "${ExecuteValidationQueriesFunctionArn}",
            "ResultPath": "$.validations.queries.pre",
            "Next": "Run Pre-Execution Backup",
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "Next": "Report Failure"
                }
            ]
        },
        "Run Pre-Execution Backup": {
            "Type": "Task",
            "Resource": "${InvokeBackupScriptFunctionArn}",
            "ResultPath": "$.backups.pre",
            "Next": "Get Execution State",
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "Next": "Report Failure"
                }
            ]
        },
        "Get Execution State": {
            "Type": "Task",
            "Resource": "${GetExecutionStateFunctionArn}",
            "ResultPath": "$.state",
            "Next": "Build Stage",
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "Next": "Report Failure"
                }
            ]
        },
        "Build Stage": {
            "Type": "Parallel",
            "OutputPath": "$.[1]",
            "Next": "Skip Load?",
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "Next": "Report Failure"
                }
            ],
            "Branches": [
                {
                    "StartAt": "Update Execution State - IN_PROGRESS",
                    "States": {
                        "Update Execution State - IN_PROGRESS": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::dynamodb:updateItem",
                            "ResultPath": null,
                            "End": true,
                            "Parameters": {
                                "TableName": "${GfeDbExecutionStateTable}",
                                "Key": {
                                    "commit__sha": {
                                        "S.$": "$.input.commit_sha"
                                    },
                                    "execution__version": {
                                        "N.$": "States.Format('{}', $.input.version)"
                                    }
                                },
                                "UpdateExpression": "SET execution__date_utc = :execution_date_utc, execution__status = :status, execution__input_parameters__align = :align, execution__input_parameters__kir = :kir, execution__input_parameters__mem_profile = :mem_profile, execution__input_parameters__limit = :limit, updated_utc = :updated_utc",
                                "ExpressionAttributeValues": {
                                    ":execution_date_utc": {
                                        "S.$": "$$.Execution.StartTime"
                                    },
                                    ":status": {
                                        "S": "IN_PROGRESS"
                                    },
                                    ":align": {
                                        "BOOL.$": "$.input.input_parameters.align"
                                    },
                                    ":kir": {
                                        "BOOL.$": "$.input.input_parameters.kir"
                                    },
                                    ":mem_profile": {
                                        "BOOL.$": "$.input.input_parameters.mem_profile"
                                    },
                                    ":limit": {
                                        "N.$": "States.Format('{}', $.input.input_parameters.limit)"
                                    },
                                    ":updated_utc": {
                                        "S.$": "$$.State.EnteredTime"
                                    }
                                }
                            }
                        }
                    }
                },
                {
                    "StartAt": "Check Existing Build",
                    "States": {
                        "Check Existing Build": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::aws-sdk:s3:listObjects",
                            "Parameters": {
                                "Bucket": "${DataBucketName}",
                                "Prefix.$": "States.Format('data/{}/csv/', $.input.version)"
                            },
                            "ResultPath": "$.validations.check_existing_build",
                            "Next": "Files Exist?"
                        },
                        "Files Exist?": {
                            "Type": "Choice",
                            "Choices": [
                                {
                                    "Variable": "$.validations.check_existing_build.Contents",
                                    "IsPresent": false,
                                    "Next": "Generate CSV files"
                                }
                            ],
                            "Default": "Use Existing Build?"
                        },
                        "Use Existing Build?": {
                            "Type": "Choice",
                            "Choices": [
                                {
                                    "Variable": "$.input.input_parameters.use_existing_build",
                                    "BooleanEquals": false,
                                    "Next": "Generate CSV files"
                                }
                            ],
                            "Default": "Validate Build"
                        },
                        "Generate CSV files": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::batch:submitJob.sync",
                            "ResultPath": null,
                            "Next": "Validate Build",
                            "Parameters": {
                                "JobDefinition": "${BuildJobDefinition}",
                                "JobName": "${BuildJobName}",
                                "JobQueue": "${BuildJobQueue}",
                                "ContainerOverrides": {
                                    "Environment": [
                                        {
                                            "Name": "EVENT",
                                            "Value.$": "States.JsonToString($)"
                                        }
                                    ]
                                }
                            }
                        },
                        "Validate Build": {
                            "Type": "Task",
                            "Resource": "${ValidateBuildOutputFunctionArn}",
                            "Parameters": {
                                "execution_id.$": "$$.Execution.Id",
                                "execution_start_time.$": "$$.Execution.StartTime",
                                "input.$": "$.input"
                            },
                            "ResultPath": "$.validations.build_outputs",
                            "Next": "Is Build Successful?"
                        },
                        "Is Build Successful?": {
                            "Type": "Choice",
                            "Choices": [
                                {
                                    "Variable": "$.validations.build_outputs.is_valid_build",
                                    "BooleanEquals": true,
                                    "Next": "Pass Build"
                                }
                            ],
                            "Default": "Fail Build"
                        },
                        "Pass Build": {
                            "Type": "Pass",
                            "ResultPath": null,
                            "End": true
                        },
                        "Fail Build": {
                            "Type": "Fail",
                            "Error": "BuildFailed",
                            "Cause": "No valid build was generated"
                        }
                    }
                }
            ]
        },
        "Report Failure": {
            "Type": "Parallel",
            "Next": "Pipeline Failure",
            "InputPath": "$$.Execution.Input",
            "Branches": [
                {
                    "StartAt": "Update Execution State - FAILED",
                    "States": {
                        "Update Execution State - FAILED": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::dynamodb:updateItem",
                            "ResultPath": null,
                            "End": true,
                            "Parameters": {
                                "TableName": "${GfeDbExecutionStateTable}",
                                "Key": {
                                    "commit__sha": {
                                        "S.$": "$.input.commit_sha"
                                    },
                                    "execution__version": {
                                        "N.$": "States.Format('{}', $.input.version)"
                                    }
                                },
                                "UpdateExpression": "SET execution__status = :status, updated_utc = :updated_utc",
                                "ExpressionAttributeValues": {
                                    ":status": {
                                        "S": "FAILED"
                                    },
                                    ":updated_utc": {
                                        "S.$": "$$.State.EnteredTime"
                                    }
                                }
                            }
                        }
                    }
                },
                {
                    "StartAt": "Publish Failure",
                    "States": {
                        "Publish Failure": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::sns:publish",
                            "Parameters": {
                                "TopicArn": "${GfeDbExecutionResultTopicArn}",
                                "Message": {
                                    "result": "FAILED",
                                    "input_parameters.$": "$"
                                }
                            },
                            "End": true
                        }
                    }
                }
            ]
        },
        "Pipeline Failure": {
            "Type": "Fail",
            "Error": "ExecutionFailed"
        },
        "Skip Load?": {
            "Type": "Choice",
            "Choices": [
                {
                    "Variable": "$.input.input_parameters.skip_load",
                    "BooleanEquals": true,
                    "Next": "Skipped"
                }
            ],
            "Default": "Load Stage"
        },
        "Skipped": {
            "Type": "Pass",
            "ResultPath": null,
            "End": true
        },
        "Load Stage": {
            "Type": "Parallel",
            "OutputPath": "$.[1]",
            "Next": "Run Post-Execution Backup",
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "Next": "Report Failure"
                }
            ],
            "Branches": [
                {
                    "StartAt": "Run Load Script",
                    "States": {
                        "Run Load Script": {
                            "Type": "Task",
                            "Resource": "${InvokeLoadScriptFunctionArn}",
                            "End": true
                        }
                    }
                },
                {
                    "StartAt": "Load Release Activity",
                    "States": {
                        "Load Release Activity": {
                            "Type": "Task",
                            "Resource": "${LoadReleaseActivityArn}",
                            "HeartbeatSeconds": 60,
                            "ResultPath": null,
                            "Next": "Run Post-Execution Validation Query"
                        },
                        "Run Post-Execution Validation Query": {
                            "Type": "Task",
                            "Resource": "${ExecuteValidationQueriesFunctionArn}",
                            "ResultPath": "$.validations.queries.post",
                            "Next": "Validate Results (placeholder)"
                        },
                        "Validate Results (placeholder)": {
                            "Type": "Pass",
                            "ResultPath": null,
                            "Next": "Is Load Successful? (placeholder)"
                        },
                        "Is Load Successful? (placeholder)": {
                            "Type": "Choice",
                            "Choices": [
                                {
                                    "Variable": "$.validations.queries.post",
                                    "IsPresent": true,
                                    "Next": "Pass Load"
                                }
                            ],
                            "Default": "Fail Load"
                        },
                        "Pass Load": {
                            "Type": "Pass",
                            "ResultPath": null,
                            "End": true
                        },
                        "Fail Load": {
                            "Type": "Fail",
                            "Error": "LoadFailed",
                            "Cause": "Post-execution validation queries do not match expected values"
                        }
                    }
                }
            ]
        },
        "Run Post-Execution Backup": {
            "Type": "Task",
            "Resource": "${InvokeBackupScriptFunctionArn}",
            "ResultPath": "$.backups.post",
            "Next": "Report Success",
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "Next": "Report Failure"
                }
            ]
        },
        "Report Success": {
            "Type": "Parallel",
            "Next": "Pipeline Success",
            "ResultPath": null,
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "Next": "Report Failure"
                }
            ],
            "Branches": [
                {
                    "StartAt": "Update Execution State - SUCCESS",
                    "States": {
                        "Update Execution State - SUCCESS": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::dynamodb:updateItem",
                            "ResultPath": null,
                            "End": true,
                            "Parameters": {
                                "TableName": "${GfeDbExecutionStateTable}",
                                "Key": {
                                    "commit__sha": {
                                        "S.$": "$.input.commit_sha"
                                    },
                                    "execution__version": {
                                        "N.$": "States.Format('{}', $.input.version)"
                                    }
                                },
                                "UpdateExpression": "SET execution__status = :status, updated_utc = :updated_utc",
                                "ExpressionAttributeValues": {
                                    ":status": {
                                        "S": "SUCCESS"
                                    },
                                    ":updated_utc": {
                                        "S.$": "$$.State.EnteredTime"
                                    }
                                }
                            }
                        }
                    }
                },
                {
                    "StartAt": "Publish Success",
                    "States": {
                        "Publish Success": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::sns:publish",
                            "ResultPath": null,
                            "Parameters": {
                                "TopicArn": "${GfeDbExecutionResultTopicArn}",
                                "Message": {
                                    "result": "SUCCESS",
                                    "input_parameters.$": "$"
                                }
                            },
                            "End": true
                        }
                    }
                }
            ]
        },
        "Pipeline Success": {
            "Type": "Succeed"
        }
    }
}