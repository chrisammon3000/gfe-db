{
    "StartAt": "Pre-Execution Tasks",
    "States": {
        "Pre-Execution Tasks": {
            "Type": "Parallel",
            "OutputPath": "$.[0]",
            "Next": "Update Status -> BUILD_IN_PROGRESS",
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "Next": "Handle Error"
                }
            ],
            "Branches": [
                {
                    "StartAt": "Run Pre-Execution Validation Query",
                    "States": {
                        "Run Pre-Execution Validation Query": {
                            "Type": "Task",
                            "Resource": "${ExecuteValidationQueriesFunctionArn}",
                            "ResultPath": "$.validations.queries.pre",
                            "Next": "Run Pre-Execution Backup"
                        },
                        "Run Pre-Execution Backup": {
                            "Type": "Task",
                            "Resource": "${InvokeBackupScriptFunctionArn}",
                            "ResultPath": "$.backups.pre",
                            "Next": "Get Execution State"
                        },
                        "Get Execution State": {
                            "Type": "Task",
                            "Resource": "${GetExecutionStateFunctionArn}",
                            "ResultPath": "$.state",
                            "End": true
                        }
                    }
                }
            ]
        },
        "Update Status -> BUILD_IN_PROGRESS": {
            "Type": "Pass",
            "Result": "BUILD_IN_PROGRESS",
            "ResultPath": "$.state.execution.status",
            "Next": "Build Stage"
        },
        "Build Stage": {
            "Type": "Parallel",
            "OutputPath": "$.[1]",
            "Next": "Skip Load?",
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "Next": "Handle Error"
                }
            ],
            "Branches": [
                {
                    "StartAt": "Sync State -> BUILD_IN_PROGRESS",
                    "States": {
                        "Sync State -> BUILD_IN_PROGRESS": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::dynamodb:updateItem",
                            "ResultPath": null,
                            "End": true,
                            "Parameters": {
                                "TableName": "${GfeDbExecutionStateTable}",
                                "Key": {
                                    "commit__sha": {
                                        "S.$": "$$.Execution.Input.input.commit_sha"
                                    },
                                    "execution__version": {
                                        "N.$": "States.Format('{}', $$.Execution.Input.input.version)"
                                    }
                                },
                                "UpdateExpression": "SET execution__date_utc = :execution_date_utc, execution__status = :status, updated_utc = :updated_utc",
                                "ExpressionAttributeValues": {
                                    ":execution_date_utc": {
                                        "S.$": "$$.Execution.StartTime"
                                    },
                                    ":status": {
                                        "S.$": "$.state.execution.status"
                                    },
                                    ":updated_utc": {
                                        "S.$": "$$.State.EnteredTime"
                                    }
                                }
                            }
                        }
                    }
                },
                {
                    "StartAt": "Check Existing Build",
                    "States": {
                        "Check Existing Build": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::aws-sdk:s3:listObjects",
                            "Parameters": {
                                "Bucket": "${DataBucketName}",
                                "Prefix.$": "States.Format('data/{}/csv/', $.input.version)"
                            },
                            "ResultPath": "$.validations.check_existing_build",
                            "Next": "Files Exist?"
                        },
                        "Files Exist?": {
                            "Type": "Choice",
                            "Choices": [
                                {
                                    "Variable": "$.validations.check_existing_build.Contents",
                                    "IsPresent": false,
                                    "Next": "Generate CSV files"
                                }
                            ],
                            "Default": "Use Existing Build?"
                        },
                        "Use Existing Build?": {
                            "Type": "Choice",
                            "Choices": [
                                {
                                    "Variable": "$.input.input_parameters.use_existing_build",
                                    "BooleanEquals": false,
                                    "Next": "Generate CSV files"
                                }
                            ],
                            "Default": "Validate Build"
                        },
                        "Generate CSV files": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::batch:submitJob.sync",
                            "ResultPath": null,
                            "Next": "Validate Build",
                            "Parameters": {
                                "JobDefinition": "${BuildJobDefinition}",
                                "JobName": "${BuildJobName}",
                                "JobQueue": "${BuildJobQueue}",
                                "ContainerOverrides": {
                                    "Environment": [
                                        {
                                            "Name": "EVENT",
                                            "Value.$": "States.JsonToString($)"
                                        }
                                    ]
                                },
                                "Tags": {
                                    "Key": "Name",
                                    "Value.$": "States.Format('${Stage}-${AppName}-worker-{}', $.input.version)"
                                }
                            }
                        },
                        "Validate Build": {
                            "Type": "Task",
                            "Resource": "${ValidateBuildOutputFunctionArn}",
                            "Parameters": {
                                "execution_id.$": "$$.Execution.Id",
                                "execution_start_time.$": "$$.Execution.StartTime",
                                "input.$": "$.input"
                            },
                            "ResultPath": "$.validations.build_outputs",
                            "Next": "Is Build Successful?"
                        },
                        "Is Build Successful?": {
                            "Type": "Choice",
                            "Choices": [
                                {
                                    "Variable": "$.validations.build_outputs.is_valid_build",
                                    "BooleanEquals": true,
                                    "Next": "Update Status -> BUILD_SUCCESS"
                                }
                            ],
                            "Default": "Update Status -> BUILD_FAILURE"
                        },
                        "Update Status -> BUILD_SUCCESS": {
                            "Type": "Pass",
                            "Result": "BUILD_SUCCESS",
                            "ResultPath": "$.state.execution.status",
                            "Next": "Sync State -> BUILD_SUCCESS"
                        },
                        "Sync State -> BUILD_SUCCESS": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::dynamodb:updateItem",
                            "ResultPath": null,
                            "End": true,
                            "Parameters": {
                                "TableName": "${GfeDbExecutionStateTable}",
                                "Key": {
                                    "commit__sha": {
                                        "S.$": "$$.Execution.Input.input.commit_sha"
                                    },
                                    "execution__version": {
                                        "N.$": "States.Format('{}', $$.Execution.Input.input.version)"
                                    }
                                },
                                "UpdateExpression": "SET execution__status = :status, updated_utc = :updated_utc",
                                "ExpressionAttributeValues": {
                                    ":status": {
                                        "S.$": "$.state.execution.status"
                                    },
                                    ":updated_utc": {
                                        "S.$": "$$.State.EnteredTime"
                                    }
                                }
                            }
                        },
                        "Update Status -> BUILD_FAILURE": {
                            "Type": "Pass",
                            "Result": "BUILD_FAILURE",
                            "ResultPath": "$.state.execution.status",
                            "Next": "Sync State -> BUILD_FAILURE"
                        },
                        "Sync State -> BUILD_FAILURE": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::dynamodb:updateItem",
                            "ResultPath": null,
                            "Next": "Fail Build",
                            "Parameters": {
                                "TableName": "${GfeDbExecutionStateTable}",
                                "Key": {
                                    "commit__sha": {
                                        "S.$": "$$.Execution.Input.input.commit_sha"
                                    },
                                    "execution__version": {
                                        "N.$": "States.Format('{}', $$.Execution.Input.input.version)"
                                    }
                                },
                                "UpdateExpression": "SET execution__status = :status, updated_utc = :updated_utc",
                                "ExpressionAttributeValues": {
                                    ":status": {
                                        "S.$": "$.state.execution.status"
                                    },
                                    ":updated_utc": {
                                        "S.$": "$$.State.EnteredTime"
                                    }
                                }
                            }
                        },
                        "Fail Build": {
                            "Type": "Fail",
                            "Error": "BuildFailed",
                            "CausePath": "States.JsonToString($.validations.build_outputs.errors)"
                        }
                    }
                }
            ]
        },
        "Skip Load?": {
            "Type": "Choice",
            "Choices": [
                {
                    "Variable": "$.input.input_parameters.skip_load",
                    "BooleanEquals": true,
                    "Next": "Handle Skipped Load"
                }
            ],
            "Default": "Update Status -> LOAD_IN_PROGRESS"
        },
        "Handle Skipped Load": {
            "Type": "Parallel",
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "Next": "Handle Error"
                }
            ],
            "Branches": [
                {
                    "StartAt": "Update Status -> LOAD_SKIPPED",
                    "States": {
                        "Update Status -> LOAD_SKIPPED": {
                            "Type": "Pass",
                            "Result": "LOAD_SKIPPED",
                            "ResultPath": "$.state.execution.status",
                            "Next": "Sync State -> LOAD_SKIPPED"
                        },
                        "Sync State -> LOAD_SKIPPED": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::dynamodb:updateItem",
                            "ResultPath": null,
                            "End": true,
                            "Parameters": {
                                "TableName": "${GfeDbExecutionStateTable}",
                                "Key": {
                                    "commit__sha": {
                                        "S.$": "$$.Execution.Input.input.commit_sha"
                                    },
                                    "execution__version": {
                                        "N.$": "States.Format('{}', $$.Execution.Input.input.version)"
                                    }
                                },
                                "UpdateExpression": "SET execution__status = :status, updated_utc = :updated_utc",
                                "ExpressionAttributeValues": {
                                    ":status": {
                                        "S.$": "$.state.execution.status"
                                    },
                                    ":updated_utc": {
                                        "S.$": "$$.State.EnteredTime"
                                    }
                                }
                            }
                        }
                    }
                }
            ],
            "Next": "Publish Result"
        },
        "Update Status -> LOAD_IN_PROGRESS": {
            "Type": "Pass",
            "Result": "LOAD_IN_PROGRESS",
            "ResultPath": "$.state.execution.status",
            "Next": "Load Stage"
        },
        "Load Stage": {
            "Type": "Parallel",
            "OutputPath": "$.[2]",
            "Next": "Run Backup",
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "Next": "Handle Error"
                }
            ],
            "Branches": [
                {
                    "StartAt": "Sync State -> LOAD_IN_PROGRESS",
                    "States": {
                        "Sync State -> LOAD_IN_PROGRESS": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::dynamodb:updateItem",
                            "ResultPath": null,
                            "End": true,
                            "Parameters": {
                                "TableName": "${GfeDbExecutionStateTable}",
                                "Key": {
                                    "commit__sha": {
                                        "S.$": "$$.Execution.Input.input.commit_sha"
                                    },
                                    "execution__version": {
                                        "N.$": "States.Format('{}', $$.Execution.Input.input.version)"
                                    }
                                },
                                "UpdateExpression": "SET execution__status = :status, updated_utc = :updated_utc",
                                "ExpressionAttributeValues": {
                                    ":status": {
                                        "S.$": "$.state.execution.status"
                                    },
                                    ":updated_utc": {
                                        "S.$": "$$.State.EnteredTime"
                                    }
                                }
                            }
                        }
                    }
                },
                {
                    "StartAt": "Execute Load Query",
                    "States": {
                        "Execute Load Query": {
                            "Type": "Task",
                            "Resource": "${InvokeLoadScriptFunctionArn}",
                            "End": true
                        }
                    }
                },
                {
                    "StartAt": "Wait For Load",
                    "States": {
                        "Wait For Load": {
                            "Type": "Task",
                            "Resource": "${LoadReleaseActivityArn}",
                            "HeartbeatSeconds": 60,
                            "ResultPath": null,
                            "Next": "Run Validation Query"
                        },
                        "Run Validation Query": {
                            "Type": "Task",
                            "Resource": "${ExecuteValidationQueriesFunctionArn}",
                            "ResultPath": "$.validations.queries.post",
                            "Next": "Evaluate Query Results"
                        },
                        "Evaluate Query Results": {
                            "Type": "Task",
                            "Resource": "${EvaluateQueryResultsFunctionArn}",
                            "ResultPath": "$.validations.load_results",
                            "Next": "Is Load Successful?"
                        },
                        "Is Load Successful?": {
                            "Type": "Choice",
                            "Choices": [
                                {
                                    "Variable": "$.validations.load_results.is_load_successful.value",
                                    "BooleanEquals": true,
                                    "Next": "Update Status -> LOAD_SUCCESS"
                                }
                            ],
                            "Default": "Update Status -> LOAD_FAILED"
                        },
                        "Update Status -> LOAD_SUCCESS": {
                            "Type": "Pass",
                            "Result": "LOAD_SUCCESS",
                            "ResultPath": "$.state.execution.status",
                            "Next": "Sync State -> LOAD_SUCCESS"
                        },
                        "Sync State -> LOAD_SUCCESS": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::dynamodb:updateItem",
                            "ResultPath": null,
                            "End": true,
                            "Parameters": {
                                "TableName": "${GfeDbExecutionStateTable}",
                                "Key": {
                                    "commit__sha": {
                                        "S.$": "$$.Execution.Input.input.commit_sha"
                                    },
                                    "execution__version": {
                                        "N.$": "States.Format('{}', $$.Execution.Input.input.version)"
                                    }
                                },
                                "UpdateExpression": "SET execution__status = :status, updated_utc = :updated_utc",
                                "ExpressionAttributeValues": {
                                    ":status": {
                                        "S.$": "$.state.execution.status"
                                    },
                                    ":updated_utc": {
                                        "S.$": "$$.State.EnteredTime"
                                    }
                                }
                            }
                        },
                        "Update Status -> LOAD_FAILED": {
                            "Type": "Pass",
                            "Result": "LOAD_FAILED",
                            "ResultPath": "$.state.execution.status",
                            "Next": "Sync State -> LOAD_FAILED"
                        },
                        "Sync State -> LOAD_FAILED": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::dynamodb:updateItem",
                            "ResultPath": null,
                            "Next": "Fail Load",
                            "Parameters": {
                                "TableName": "${GfeDbExecutionStateTable}",
                                "Key": {
                                    "commit__sha": {
                                        "S.$": "$$.Execution.Input.input.commit_sha"
                                    },
                                    "execution__version": {
                                        "N.$": "States.Format('{}', $$.Execution.Input.input.version)"
                                    }
                                },
                                "UpdateExpression": "SET execution__status = :status, updated_utc = :updated_utc",
                                "ExpressionAttributeValues": {
                                    ":status": {
                                        "S.$": "$.state.execution.status"
                                    },
                                    ":updated_utc": {
                                        "S.$": "$$.State.EnteredTime"
                                    }
                                }
                            }
                        },
                        "Fail Load": {
                            "Type": "Fail",
                            "Error": "LoadFailed",
                            "CausePath": "States.JsonToString($.validations.load_results.errors)"
                        }
                    }
                }
            ]
        },
        "Run Backup": {
            "Type": "Task",
            "Resource": "${InvokeBackupScriptFunctionArn}",
            "ResultPath": "$.backups.post",
            "Next": "Publish Result",
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "Next": "Handle Error"
                }
            ]
        },
        "Handle Error": {
            "Type": "Parallel",
            "OutputPath": "$.[0]",
            "Next": "Publish Result",
            "Branches": [
                {
                    "StartAt": "Get Current State",
                    "States": {
                        "Get Current State": {
                            "Type": "Task",
                            "Resource": "${GetExecutionStateFunctionArn}",
                            "ResultPath": "$.state",
                            "Parameters": {
                                "input.$": "$$.Execution.Input.input"
                            },
                            "Next": "Is Status Current?"
                        },
                        "Is Status Current?": {
                            "Type": "Choice",
                            "Choices": [
                                {
                                    "Or": [
                                        {
                                            "Variable": "$.state.execution.status",
                                            "StringEquals": "BUILD_FAILED"
                                        },
                                        {
                                            "Variable": "$.state.execution.status",
                                            "StringEquals": "LOAD_FAILED"
                                        }
                                    ],
                                    "Next": "Sync Failed State"
                                }
                            ],
                            "Default": "Update Status -> FAILED"
                        },
                        "Update Status -> FAILED": {
                            "Type": "Pass",
                            "Result": "FAILED",
                            "ResultPath": "$.state.execution.status",
                            "Next": "Sync Failed State"
                        },
                        "Sync Failed State": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::dynamodb:updateItem",
                            "ResultPath": null,
                            "Next": "Parse Payload",
                            "Parameters": {
                                "TableName": "${GfeDbExecutionStateTable}",
                                "Key": {
                                    "commit__sha": {
                                        "S.$": "$$.Execution.Input.input.commit_sha"
                                    },
                                    "execution__version": {
                                        "N.$": "States.Format('{}', $$.Execution.Input.input.version)"
                                    }
                                },
                                "UpdateExpression": "SET execution__status = :status, updated_utc = :updated_utc, error__message = :error, error__cause = :cause",
                                "ExpressionAttributeValues": {
                                    ":status": {
                                        "S.$": "$.state.execution.status"
                                    },
                                    ":updated_utc": {
                                        "S.$": "$$.State.EnteredTime"
                                    },
                                    ":error": {
                                        "S.$": "$.Error"
                                    },
                                    ":cause": {
                                        "S.$": "$.Cause"
                                    }
                                }
                            }
                        },
                        "Parse Payload": {
                            "Type": "Pass",
                            "Parameters": {
                                "Error.$": "$.Error",
                                "Cause.$": "$.Cause"
                            },
                            "OutputPath": "$",
                            "End": true
                        }
                    }
                }
            ]
        },
        "Publish Result": {
            "Type": "Task",
            "Resource": "arn:aws:states:::sns:publish",
            "ResultPath": null,
            "Parameters": {
                "TopicArn": "${GfeDbExecutionResultTopicArn}",
                "Message.$": "$"
            },
            "Next": "Success or Failure?"
        },
        "Success or Failure?": {
            "Type": "Choice",
            "Choices": [
                {
                    "Variable": "$.Error",
                    "IsPresent": true,
                    "Next": "Pipeline Failure"
                }
            ],
            "Default": "Pipeline Success"
        },
        "Pipeline Failure": {
            "Type": "Fail",
            "ErrorPath": "$.Error",
            "CausePath": "$.Cause"
        },
        "Pipeline Success": {
            "Type": "Succeed"
        }
    }
}