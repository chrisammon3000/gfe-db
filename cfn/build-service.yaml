AWSTemplateFormatVersion: "2010-09-09"
Description: "gfe-db build service using AWS Batch"
Parameters:
  gfedbBuildImageId:
    Type: AWS::EC2::Image::Id
    Default: ami-05c75efdc7843b54e
    Description: ECS Optimized Amazon Linux 2 AMI for us-east-1
  gfeVPC:
    Type: String
    Default: vpc-8a3d74f0
    Description: Default VPC
  gfeSubnet:
    Type: String
    Default: subnet-5c44793b
    Description: Public subnet with internet access
Resources:
  gfedbBuildSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: gfedb-build-server-sg
      GroupDescription: Security group for the GFE DB build server
      VpcId: !Ref gfeVPC
      # SecurityGroupIngress: # Uncomment to allow SSH access to build instance
      #   - CidrIp: 66.214.236.87/32
      #     FromPort: 22
      #     IpProtocol: tcp
      #     ToPort: 22
  gfedbBatchServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: batch.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole
  IamInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref EcsInstanceRole
  EcsInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2008-10-17"
        Statement:
          - Sid: ""
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
      Policies:
        - PolicyName: ECS-CloudWatchLogs
          PolicyDocument: 
            Version: "2012-10-17"
            Statement:
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:DescribeLogStreams
                Effect: Allow
                Resource: arn:aws:logs:*:*:*"
        - PolicyName: gfeDBBuildServiceS3ReadWritePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:GetBucketLocation
                  - s3:GetObjectVersion
                  - s3:GetLifecycleConfiguration
                  - s3:PutObject
                  - s3:PutObjectAcl
                  - s3:PutLifecycleConfiguration
                  - s3:DeleteObject
                Resource:
                  - arn:aws:s3:::gfe-db-4498
                  - arn:aws:s3:::gfe-db-4498/*
  gfedbBatchProcessingJobDefinition:
    Type: AWS::Batch::JobDefinition
    Properties:
      Type: container
      JobDefinitionName: gfedbBatchJobDefinition
      ContainerProperties:
        Image: !Join
            - ""
            - - !Ref AWS::AccountId
              - .dkr.ecr.
              - !Ref AWS::Region
              - .amazonaws.com/
              - !Ref gfedbBuildServiceRepository
              - :latest
        Vcpus: 2
        Memory: 2000
        Command:
          - bash
          - scripts/build.sh
          # - '10'
        Environment:
          - Name: GFE_BUCKET
            Value: gfe-db-4498
      RetryStrategy:
        Attempts: 1
  gfedbBatchProcessingJobQueue:
    Type: AWS::Batch::JobQueue
    Properties:
      JobQueueName: gfedbBatchProcessingJobQueue
      Priority: 1
      ComputeEnvironmentOrder:
        - Order: 1
          ComputeEnvironment: !Ref gfedbComputeEnvironment
  gfedbComputeEnvironment:
    Type: AWS::Batch::ComputeEnvironment
    Properties:
      Type: MANAGED
      ComputeResources:
        Type: EC2
        MinvCpus: 0
        DesiredvCpus: 0
        MaxvCpus: 32
        InstanceTypes:
          - c5d.large
        Subnets:
          - !Ref gfeSubnet
        SecurityGroupIds:
          - !Ref gfedbBuildSG
        InstanceRole: !Ref IamInstanceProfile
        LaunchTemplate:
          LaunchTemplateId: !Ref gfedbBuildLaunchTemplate
      ServiceRole: !GetAtt gfedbBatchServiceRole.Arn
  gfedbBuildLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        DisableApiTermination: false
        InstanceInitiatedShutdownBehavior: stop
        ImageId: !Ref gfedbBuildImageId
        InstanceType: c5d.large
        IamInstanceProfile:
          Name: !Ref IamInstanceProfile
        Monitoring:
          Enabled: true
        SecurityGroupIds:
          - !Ref gfedbBuildSG
        TagSpecifications:
          - ResourceType: instance
            Tags: 
              - Key: Name
                Value: gfe-db-build-service
        UserData:
          Fn::Base64: |
            MIME-Version: 1.0
            Content-Type: multipart/mixed; boundary="==MYBOUNDARY=="

            --==MYBOUNDARY==
            Content-Type: text/x-shellscript; charset="us-ascii"

            #!/bin/bash -x
            IDX=1
            for DEV in /dev/disk/by-id/nvme-Amazon_EC2_NVMe_Instance_Storage_*-ns-1; do
              mkfs.xfs ${DEV}
              mkdir -p /local${IDX}
              echo ${DEV} /local${IDX} xfs defaults,noatime 1 2 >> /etc/fstab
              IDX=$((${IDX} + 1))
            done
            mount -a
            sudo yum update -y
            sudo yum install amazon-cloudwatch-agent -y

            --==MYBOUNDARY==
  gfedbBuildServiceRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: "gfe-db-build-service"
      RepositoryPolicyText:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowPushPull
            Effect: Allow
            Principal:
              AWS:
                - !Sub arn:aws:iam::${AWS::AccountId}:role/${EcsInstanceRole}
            Action:
              - "ecr:GetDownloadUrlForLayer"
              - "ecr:BatchGetImage"
              - "ecr:BatchCheckLayerAvailability"
              - "ecr:PutImage"
              - "ecr:InitiateLayerUpload"
              - "ecr:UploadLayerPart"
              - "ecr:CompleteLayerUpload"
Outputs:
  gfedbComputeEnvironmentArn:
    Value: !Ref gfedbComputeEnvironment
  gfedbBatchProcessingJobQueueArn:
    Value: !Ref gfedbBatchProcessingJobQueue
  gfedbBatchProcessingJobDefinitionArn:
    Value: !Ref gfedbBatchProcessingJobDefinition
